FORMAT: 1A
HOST: http://iitest.api.youxiamotors.com/

# 游侠汽车用户 API
游侠汽车用户 API 用于向用户提供控制汽车以及查询汽车信息的功能。

请注意，在访问这些接口的时候，服务器会设置一些 cookies，用于记录会话信息。请务必保存和回传这些 cookies。如果忽略 cookies，会导致一些奇怪的问题，如在发送注册短信的时候总是提示“验证码错误”。

一般情况下，接口返回的消息均为 JSON 格式，其结构如下：

    {
        "code": 0,  /** 状态码 0 表示操作成功，如果非 0 则表示操作失败，message 属性中会包含错误描述 */
        "message": "成功时可能包含一些成功描述信息，如果出错的话会包含错误描述信息",
        "data": {}  /** 一些额外的数据 */
    }

code 属性值代表的意义在下表中列出：

| code      |      描述      | 
|-----------| :------------- |
| 0         | 操作正常完成 |
| -10001    | 密码不正确   |
| -10002    | 手机号码非法 |
| -10003    | 缺少必传参数 |
| -10004    | 手机短信注册验证码不正确 |
| -10005    | 手机号码已被注册 |
| -10006    | 电子邮件地址已被注册 |
| -10007    | 手机注册验证码码短信已发送，请稍后再请求重新发送 |
| -10008    | 需要输入图形验证码（CAPTCHA） |
| -10009    | 图形验证码不正确 |
| -10010    | 登录后才能执行此操作 |
| -10011    | 没有访问此接口的权限 |
| -10012    | 参数非法 |
| -10013    | 汽车不存在 |
| -10014    | 用户不存在 |
| -10015    | 汽车授权不存在 |
| -10016    | 服务器内部错误 |
| -10017    | 汽车已存在 |
| -10018    | 用户已存在 |
| -10019    | 汽车授权已存在 |




# Group 注册（Register）

注册相关接口共有三个，分别是

* 创建账户 `/register/create`
* 获取注册短信验证码 `/register/vericode`
* 获取“获取注册短信验证码”的验证码 `/register/captcha`

一个典型的注册过程如下：

1. 收集用户信息 ( 向用户显示注册表单 )
1. 要求发送注册短信验证码 ( `/register/vericode` )
1. 如果服务器返回无法发送注册短信验证码，就获取“获取注册短信验证码”的图形验证码，然后尝试重新要求服务器发送短信验证码 ( `/register/captcha` )
1. 将短信验证码和用户信息提交给服务器进行注册 ( `/register/create` )

其中一个特殊之处是，调用 /register/vericode 接口时不一定需要提供 captcha 参数，也就是说不需要用户输入验证码。只有当服务器返回失败的时候，才需要提供 captcha 参数，也就是说这时候才需要用户输入验证码。
这样就可以让大部分用户在注册的时候不需要输入验证码，有助于提高用户体验。

一般来说，只有当某个 IP 短时间内频繁访问 /register/vericode 接口时，来自这个 IP 的用户才需要输入图形验证码。

用户注册之后可以与自己的汽车进行关联，也可以获得对他人汽车的使用授权。

### GET /register/create?cellphone={cellphone}&email={email}&password={password}&name={name}&vericode={vericode}

**创建账户**

将用户注册信息提供给服务器，创建用户账户。

+ Parameters
    + cellphone (<string>, `13800138000`) ... 用户手机号码，注册成功之后没有关联汽车的用户可以使用手机通过收取短信的方式找回密码
    + email (optional,<string>,`user@example.com`) ... 用户的电子邮件地址
    + password (<string>, `123456abcd`) ... 用户的账户密码
    + name  (<string>, optional, `nickname`) ... 用户昵称
    + vericode (<string>, required, `901384`) ... 注册短信验证码，注册前需要向手机发送短信验证码，确认手机号码之后才能创建账户
    
+ Request (application/x-www-form-urlencoded)
    
+ Response 200 (application/json)

    + Header
    
            Set-Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7; path=/
            
    + Body
    
            {
                "code": 0,
                "message": "用户注册成功"
            }
        

### GET /register/vericode?cellphone={cellphone}&captcha={captcha}

**获取注册短信验证码**

用户注册的时候需要验证手机号码，可以通过此接口要求系统向用户手机发送短信验证码。

+ Parameters
    + cellphone (<string>, `13800138000`) ... 用于接收注册短信验证码的手机号码
    + captcha (<string>, optional, `ab3x`) ... 为了防止短信接口被滥用，用户有可能需要输入验证码后才能获取注册验证码短信。一般情况下不需要用户输入验证码就能发送注册短信，但如果接口返回无法发送验证码之类的错误，请要求用户输入验证码，然后再次调用此接口。
    
+ Request (application/x-www-form-urlencoded)
    
+ Response 200 (application/json)

    + Header
    
            Set-Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7; path=/

    + Body

            {
                "code": 0,  /** 如果不为 0,可以尝试要求用户输入验证码之后再重新请求此接口 */
                "message": "注册验证码短信发送成功",
                "data": {
                    "cooldown": 120  /** 需要等待多少秒后才能再次要求发送短信 */
                }
            }
        

### GET /register/captcha

**获取“获取注册短信验证码”的验证码**

为了防止短信接口被滥用，在某些情况下，获取注册验证短信时需要输入图形验证码，可以通过这个接口来获取图形验证码图片，并将验证码图片展现给用户。

输入图形验证码上的字母时，可以不区分大小写。
    
+ Response 200 (image/png)

    + Header
    
            Set-Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7; path=/


# Group 会话（登录和注销）（Session）

### GET /session/login?cellphone={cellphone}&&password={password}&captcha={captcha}

**登录**

进行用户登录操作，只有登录之后才能进行其他针对汽车和账户的操作。

会话信息是保存在 cookies 中的，所以请务必保存服务器返回的 cookies，在向服务器发送请求时，也应该发送 cookies.

一般情况下，登录的时候不需要输入图形验证码。但如果服务器认为当前有人正在进行恶意攻击，就会要求输入图形验证码，在这种情况下，该接口会返回“需要输入图形验证码”的错误信息，用户只需要访问 `/session/captcha` 接口获取验证码，输入验证码之后再次提交登录请求即可。

+ Parameters
    + cellphone (<string>, `13800138000`) ... 用户手机号码
    + password (<string>, `123456abcd`) ... 用户的密码明文
    + captcha (<string>, optional, `4a3b`) ... 图形验证码，一般情况下不需要发送图形验证码，当服务器认为有人恶意攻击时，会要求输入图形验证码
    
+ Request (application/x-www-form-urlencoded)
    
+ Response 200 (application/json)

    + Header
    
            Set-Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7; path=/
            
    + Body
    
            {
                "code": 0,
                "message": "登录成功"
            }
        

### GET /session/captcha

**获取登录图形验证码**

获取登录时需要输入的图形验证码。

+ Response 200 (image/png)

    + Header
    
            Set-Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7; path=/


### GET /session/logout

**注销**

注销，即退出登录。虽然理论上来说，要注销会话只需要将本地的 cookies 删除即可，但出于安全考虑，我们还是建议先访问此接口，再将本地的 cookies 删除。

+ Request (application/x-www-form-urlencoded)
    
    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7

+ Response 200 (application/json)

    + Header
    
            Set-Cookie: sid=; expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=-1
            
    + Body
    
            {
                "code": 0,
                "message": "注销成功"
            }
        


### GET /session/history?no={no}&limit={limit}&order={order}

**获取登录历史**

获取用户的历史登录记录，每次最多可以获取 100 条记录。

该接口须要登录之后才能使用。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几条记录开始获取，第一条记录的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的记录数量
    + order = `desc` (<int>, optional, `asc`) ... 登录历史列表按照时间排列，可以用这个参数指定是升序排列还是降序排列，可选值为 _asc_ 或 _desc_

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 113,   /** 用户登录记录总数 */
                    "no": 11,
                    "limit": 2,
                    "histories": [
                        {
                            "successed": true,         /** 登录是否成功，成功为 true，失败为 false */
                            "time": 1411032503,     /** 登录时间，格式为 UNIX 时间戳 */
                            "source": "api",        /** 登录来源 */
                            "ip": "118.158.55.64"   /** 客户端 IP 地址 */
                        },
                        {
                            "successed": true,         /** 登录是否成功，成功为 true，失败为 false */
                            "time": 1411031100,     /** 登录时间，格式为 UNIX 时间戳 */
                            "source": "api",        /** 登录来源 */
                            "ip": "118.158.55.64"   /** 客户端 IP 地址 */
                        }
                    ]
                }
            }
        




# Group 汽车授权（Car Authorization）

### GET /authorization/create?cellphone={cellphone}&&serial_no={password}&duration={duration}&expiration={expiration}

**创建授权**

将汽车的使用权授予其他用户。

授权方式有两种，一种是有期限授权，一种是长期授权。在有期限授权的情况下，受权用户只能使用汽车一段时间，这段时间的长短由授权人指定。在长期授权的情况下，受权用户可以一直使用汽车。

不论是有期限授权还是长期授权，汽车所有者都可以随时撤销授权。

要进行有期限授权，可以使用 _duration_ 或 _expiration_ 其中一个参数来指定授权时间，如果同时指定了两个参数，那么将以授权时间更短的那个参数为准。

要进行长期授权，只需要省略 _duration_ 和 _expiration_ 参数即可。

汽车所有者不能创建授予自己的汽车授权。

+ Parameters
    + cellphone (<string>, `13800138000`) ... 受权用户的手机号码
    + serial_no (<string>, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 要授权的汽车的序列号
    + duration (<string>, optional, `86400`) ... 授权时长，单位为秒。受权用户只能在接下来的这么长的时间内使用汽车
    + expiration (<string>, optional, `1411197724`) ... 授权截止期，格式为 UNIX 时间戳。受权用户只能在这个时间之前使用汽车
    
+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
    
+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "授权成功",
                "data": {
                    "authorization_id": 118869, /// 授权记录编号
                    "cellphone": 13800138001,   /// 受权用户的手机号码
                    "serial_no": "25b0b035-766a-49b1-8cd8-ceabb26f96d2",    /// 授权的汽车的序列号
                    "duration": 86400,           /// 授权时长
                    "expiration": 1411197724    /// 授权到期时间
                }
            }
        



### GET /authorization/revoke?authorization_id={authorization_id}

**撤销授权**

撤销曾经授予给其他用户的汽车使用授权。

汽车拥有者不能撤销对自己的汽车授权。

+ Parameters
    + authorization_id (<string>, `118869`) ... 授权编号

+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
    
+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "授权撤销成功"
            }
        


### GET /authorization/list?no={no}&limit={limit}&order={order}&serial_no={serial_no}

获取用户名下汽车的授权记录列表。

每次最多只能获取 100 条记录。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几条记录开始获取，第一条记录的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的记录数量
    + order = `desc` (<int>, optional, `asc`) ... 授权记录列表按照授权时间排列，可以用这个参数指定是升序排列还是降序排列，可选值为 _asc_ 或 _desc_
    + serial_no = `` (<string>, optional, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 如果指定了汽车序列号，则只列出有关该汽车的授权记录，否则列出用户名下所有汽车的授权记录

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 113,   /** 授权记录总数 */
                    "no": 11,
                    "limit": 1,
                    "authorizations": [
                        {
                            "authorization_id": 76
                            "serial_no": "25b0b035-766a-49b1-8cd8-ceabb26f96d2",    /** 授权的汽车序列号 */ 
                            "cellphone": 13800138001,   /** 受权人的手机号码 */
                            "effective": true,          /** 授权是否有效，如果授权已被撤销或已经超过授权时间，则授权无效，否则授权有效 */
                            "etime": 1411197724,        /** 授权到期时间，格式为 UNIX 时间戳 */
                            "ctime": 1411112304,        /** 授权记录创建时间 */
                            "rtime": null,              /** 授权被撤销的时间 */
                            "revoked": false            /** 授权是否已经被撤销 */
                        }
                    ]
                }
            }
        

### GET /authorization/users?serial_no={serial_no}

获取汽车名下当前拥有有效授权的所有用户的名单

+ Parameters
    + serial_no (<string>, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 汽车的序列号。如果不传此参数，则列出当前用户名下所有汽车的所有拥有有效授权的用户名单。如果传递了此参数，则只列出指定汽车下拥有有效授权的用户名单
    
+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
    
+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "users": [
                        {
                            "cellphone": 13800138001,   /** 受权用户的手机号码 */
                            "serial_no": ""25b0b035-766a-49b1-8cd8-ceabb26f96d2"    /** 授权的汽车序列号 */
                        }
                    ]
                }
            }
        



### GET /authorization/obtainment?no={no}&limit={limit}&order={order}&serial_no={serial_no}&effective={effective}

获取用户拥有的授权列表。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几条记录开始获取，第一条记录的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的记录数量
    + order = `desc` (<int>, optional, `asc`) ... 授权记录列表按照授权时间排列，可以用这个参数指定是升序排列还是降序排列，可选值为 _asc_ 或 _desc_
    + serial_no = `` (<string>, optional, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 如果指定了汽车序列号，则只列出有关该汽车的受权记录，否则列出用户所有的受权记录
    + effective = `` (<string>, optional, 1) ... 如果不指定此参数，则返回有效的和已失效的受权记录，如果指定了此参数，则只返回有效的或已失效的受权记录，可选值为 _1_ 或 _0_，_1_ 表示返回有效的受权记录，_0_ 表示返回已失效的受权记录

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 113,   /** 在给定的查询条件下，受权记录的总数量 */
                    "no": 11,
                    "limit": 1,
                    "authorizations": [
                        {
                            "authorization_id": 76
                            "serial_no": "25b0b035-766a-49b1-8cd8-ceabb26f96d2",    /** 授权的汽车序列号 */ 
                            "effective": true,          /** 授权是否有效，如果授权已被撤销或已经超过授权时间，则授权无效，否则授权有效 */
                            "etime": 1411197724,        /** 授权到期时间，格式为 UNIX 时间戳 */
                            "ctime": 1411112304,        /** 授权记录创建时间 */
                            "rtime": null,              /** 授权被撤销的时间，如果为 null 表示授权没有被撤销，否则表示授权已经被撤销了，格式为 UNIX 时间戳 */
                        }
                    ]
                }
            }
        

# Group 绑定汽车（Car Binding）

### GET /bind/bind?serial_no={serial_no}

**创建授权**

用户在购买汽车之后，应立即使用汽车序列号将汽车与自己的账号进行绑定。汽车序列号印制在汽车上（初步决定以二维码方式印制序列号）。

绑定成功后，系统将自动创建用户对汽车的使用授权，用户不可删除此授权。


+ Parameters
    + serial_no (<string>, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 要绑定的汽车序列号
    
+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
    
+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "绑定汽车操作成功"
            }
        



# Group 应用（App）

用户可以从应用商店中下载并安装应用和皮肤。对于付费的应用，用户需要购买后才能下载。

`app/trigger/*` 类接口是应用触发器接口。在用户对应用进行操作（如安装应用、卸载应用）后，设备应该通过这些接口向服务器回报。


### GET /app/download?identifier={identifier}&version={version}

**下载应用的接口**

安装应用前，需要下载应用，设备可以调用此接口来下载应用。一般来说，设备不需要为此接口编写代码，设备可以在应用信息接口 `app/get` 或 `app/list` 中获取应用的下载地址。

如果用户没有安装指定应用的权限，下载就会失败，服务器会返回 HTTP 403 错误和用于说明错误的 JSON 信息。

如果应用不存在，下载就会失败，服务器会返回 HTTP 404 和用于说错误的 JSON 消息。

+ Parameters
    + identifier (<string>, `com.example.application`) ... 安装的应用的标识符
    + version (<string>, `1.0`) ... 安装应用的版本
    
+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7

+ Response 403 (application/json)

    + Body
    
            {
                /** 这是用户无权下载时服务器返回的内容，如果可以下载，服务器将直接返回文件的二进制内容（就像普的下载一样） */
                "code": -10017,
                "message": "您不能下载此应用"
            }



### GET /app/list?no={no}&limit={limit}&order={order}&category={category}

获取应用列表。

每次最多只能获取 100 条记录。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个应用开始获取，第一条个应用的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的应用数量
    + order = `desc` (<int>, optional, `asc`) ... 应用列表按照添加时间排列，可以用这个参数指定是升序排列还是降序排列，可选值为 _asc_ 或 _desc_
    + category (<string>, optional, `媒体娱乐`) ... 如果指了分类，则只列出该分类下的应用，否则列出所有应用

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 1,
                    "no": 1,
                    "limit": 10,
                    "apps": [
                        {
                            "identifier": "com.my.application",     /** 应用唯一标识符 */
                            "version": "1.4",                       /** 应用版本号 */
                            "name": "我的应用",                     /** 应用名字 */
                            "description": "我的应用的描述",        /** 应用说明 */
                            "category": "媒体娱乐",                 /** 应用所属分类 */           
                            "headline_img": "\/\/test.api.youxiamotors.com\/upload\/uploaded\/ba\/cf\/e202244f47a651203dd7ddb3d2ba.png",    /** 题图图片地址 */
                            "preview_img": [                        /** 预览图片地址，预览图片有多张，因此是一个数组 */
                                "\/\/test.api.youxiamotors.com\/upload\/uploaded\/68\/a3\/782836125db6f91ff312a3a0cdd0.png",
                                "\/\/test.api.youxiamotors.com\/upload\/uploaded\/e3\/60\/34eb58b729afa6027150f520caf8.png"
                            ],
                            "price": 1.99,                          /** 应用售价，如果为 0 则表示这是免费应用 */
                            "score": 4.1,                             /** 应用当前的用户评分 */
                            "ctime": 1414053811,                    /** 应用创建时间 */
                            "mtime": 0,                             /** 应用最后修改时间 */
                            "bin_file": "http:\/\/test.api.youxiamotors.com\/app\/download?identifier=com.my.application&version=1.4"       /** 应用安装包下载地址 */
                        }
                    ]
                }
            }



### GET /app/top/latest?no={no}&limit={limit}&category={category}

获取最近刚刚上架的应用，最近更新的应用排在前面。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个应用开始获取，第一条个应用的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的应用数量
    + category (<string>, optional, `媒体娱乐`) ... 如果指了分类，则只列出该分类下的应用排行，否则列出所有应用排行

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 1,
                    "no": 1,
                    "limit": 10,
                    "apps": [
                        /** 该数组的内容和 `app/list` 接口中 apps 域的内容完全相同，具体请参考 `app/list` 接口 */
                    ]
                }
            }



### GET /app/top/7d?no={no}&limit={limit}&category={category}

获取 7 日内最热门的应用排行，应用越热门排名越靠前。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个应用开始获取，第一条个应用的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的应用数量
    + category (<string>, optional, `媒体娱乐`) ... 如果指了分类，则只列出该分类下的应用排行，否则列出所有应用排行

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 1,
                    "no": 1,
                    "limit": 10,
                    "apps": [
                        {
                            install_num: 1027,
                            /** 该对象中的其他内容和 `app/list` 接口中 apps 域的内容完全相同，具体请参考 `app/list` 接口 */
                        }
                    ]
                }
            }



### GET /app/top/24h?no={no}&limit={limit}&category={category}

获取 24 小时内最热门的应用排行，应用越热门排名越靠前。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个应用开始获取，第一条个应用的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的应用数量
    + category (<string>, optional, `媒体娱乐`) ... 如果指了分类，则只列出该分类下的应用排行，否则列出所有应用排行

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 1,
                    "no": 1,
                    "limit": 10,
                    "apps": [
                        {
                            install_num: 1027,
                            /** 该对象中的其他内容和 `app/list` 接口中 apps 域的内容完全相同，具体请参考 `app/list` 接口 */
                        }
                    ]
                }
            }



### GET /app/history?no={no}&limit={limit}&identifier={identifier}

获取一个应用的历史版本信息（仅显示状态为正常的旧版本），新版本显示在前面。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个版本开始获取，最新版本的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的历史版本数量
    + identifier (<string>, required, `com.example.application`) ... 应用的唯一标识符

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 1,
                    "no": 1,
                    "limit": 10,
                    "apps": [
                        /** 应用的历史版本列表，该数组的内容和 `app/list` 接口中 apps 域的内容完全相同，具体请参考 `app/list` 接口 */
                    ]
                }
            }



### GET /app/get?identifier={identifier}&version={version}

获取一个应用的信息。

+ Parameters

    + identifier (<string>, required, `com.my.application`) ... 应用标识符
    + version (<string>, required, `1.3`) ... 要获取的应用版本，如果省略，则返回应用的最新版本

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "identifier": "com.my.application",     /** 应用唯一标识符 */
                    "version": "1.4",                       /** 应用版本号 */
                    "name": "我的应用",                     /** 应用名字 */
                    "description": "我的应用的描述",        /** 应用说明 */
                    "category": "媒体娱乐",                 /** 应用所属分类 */           
                    "headline_img": "\/\/test.api.youxiamotors.com\/upload\/uploaded\/ba\/cf\/e202244f47a651203dd7ddb3d2ba.png",    /** 题图图片地址 */
                    "preview_img": [                        /** 预览图片地址，预览图片有多张，因此是一个数组 */
                        "\/\/test.api.youxiamotors.com\/upload\/uploaded\/68\/a3\/782836125db6f91ff312a3a0cdd0.png",
                        "\/\/test.api.youxiamotors.com\/upload\/uploaded\/e3\/60\/34eb58b729afa6027150f520caf8.png"
                    ],
                    "price": 1.99,                          /** 应用售价，如果为 0 则表示这是免费应用 */
                    "score": 4.1,                           /** 应用当前的用户评分 */
                    "ctime": 1414053811,                    /** 应用创建时间 */
                    "mtime": 0,                             /** 应用最后修改时间 */
                    "bin_file": "http:\/\/test.api.youxiamotors.com\/app\/download?identifier=com.my.application&version=1.4"       /** 应用安装包下载地址 */
                }
            }


### GET /app/category/list?no={no}&limit={limit}

获取应用的分类列表。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个分类开始获取，第一个分类的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的分类的数量

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 2,
                    "no": 1,
                    "limit": 10,
                    "categories": [
                        {
                            "category_name": "媒体娱乐",    /** 分类名字 **/
                            "ctime": 1234567890             /** 分类创建时间 **/
                        },
                        {
                            "category_name": "系统工具",
                            "ctime": 1234567891
                        }
                    ]
                }
            }




### GET /app/review/create?identifier={identifier}&version={version}&score={score}&comment={comment}

为一个应用打分并进评论。如果曾经为同一个应用的同一个版本进行评分，则新的评分会取代旧的评分。

+ Parameters

    + identifier (<string>, required, `com.my.application`) ... 应用标识符
    + version (<string>, optional, `1.3`) ... 要评分的应用版本，如果省略，则对最新版本进行评分
    + score (<int>, required, `4`) ... 给应用的分数
    + comment (<string>, optional, `这个应用不错`) ... 给应用的评论

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "identifier": "com.my.application",     /** 应用唯一标识符 */
                    "version": "1.4",                       /** 应用版本号 */
                    "score" : 3.5,                          /** 给应用评分后，应用的得分 */
                }
            }



### GET /app/review/get?identifier={identifier}&version={version}

获取用户给应用的评分信息。

+ Parameters

    + identifier (<string>, required, `com.my.application`) ... 应用标识符
    + version (<string>, optional, `1.3`) ... 要评分的应用版本，如果省略，则获取用户给该应用评分过的版本中，应用版本最新的评分

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "identifier": "com.my.application",     /** 应用唯一标识符 */
                    "version": "1.4",                       /** 应用版本号 */
                    "score" : 3.5                          /** 给应用评分后，应用的得分 */
                }
            }




### GET /app/headline/list?no={no}&limit={limit}

获取所有应用头条的列表。

+ Parameters

    + no = `1` (<int>, optional, `11`) ... 从第几个头条开始获取，第一个分类的序号是 1
    + limit = `10` (<int>, optional, `10`) ... 要获取的头条的数量

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    "count": 2,
                    "no": 1,
                    "limit": 10,
                    "headlines": [
                        {
                            "internal_name": "featured",    /** 头条内部唯一名字 **/
                            "display_name": "推荐应用"     /** 对用户显示的头条名字 **/
                        },
                        {
                            "internal_name": "test",
                            "display_name": "测试头条"  
                        }
                    ]
                }
            }




### GET /app/headline/get?internal_name={internal_name}

获取所有应用头条的列表。

+ Parameters

    + internal_name  (<string>, required, `featured`) ... 要获取的应用头条的内部名字

+ Request (application/x-www-form-urlencoded)

    + Header
    
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7
            

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "操作成功",
                "data": {
                    /* TODO: 待补完
                }
            }





### GET /app/trigger/installed

**用户安装应用后的触发器**

在用户成功下载并安装一个应用后，设备应该通过此接口向服务器回报。服务器会记录用户的安装记录，如果日后该应用改为收费，已经安装过此应用的用户仍然可以免费重新安装。

+ Parameters
    + serial_no (<string>, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 安装了应用的汽车的汽车序列号
    + identifier (<string>, `com.example.application`) ... 安装的应用的标识符
    + version (<string>, `1.0`) ... 安装应用的版本
    
+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "应用触发器执行成功"
            }


### GET /app/trigger/uninstalled

**用户卸载应用后的触发器**

在用户卸载一个应用后，设备应该通过此接口向服务器回报。

+ Parameters
    + serial_no (<string>, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 卸载了应用的汽车的汽车序列号
    + identifier (<string>, `com.example.application`) ... 被卸载的应用的标识符
    + version (<string>, `1.0`) ... 被卸载的应用的版本
    
+ Request (application/x-www-form-urlencoded)

    + Header
            
            Cookie: sid=l2o23e1ntv3e01nt9qesdnrhp7

+ Response 200 (application/json)

    + Body
    
            {
                "code": 0,
                "message": "应用触发器执行成功"
            }




# Group 杂项（Miscellaneous）

### GET /misc/qrcode/bind?serial_no={serial_no}

**提示用户绑定汽车的二维码**

该接口会返回一个图片，图片是一个二维码，二维码的内容是一个 URL：

http://www.youxiamotors.com/download/app.html?id={serial_no}

URL 中的 serial_no 会被替换为请求参数中的 serial_no

+ Parameters
    + serial_no (<string>, `25b0b035-766a-49b1-8cd8-ceabb26f96d2`) ... 要绑定的汽车序列号
    
+ Request (application/x-www-form-urlencoded)

+ Response 200 (image/png)


